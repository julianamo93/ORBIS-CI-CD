trigger:
 branches:
   include:
     - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  rm: rm554113
  location: eastus
  resourceGroup: rg-orbis
  service-plan: planOrbis
  app-name: orbis-$(rm)
  runtime: JAVA:17-java17
  sku: F1
  nome-artefato: orbis

stages:
  - stage: criarInfra
    jobs:
      - job: criarWebApp
        displayName: 'Criar o Serviço de Aplicativo'
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'MyAzureSubscription'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Criar o Grupo de Recursos az group create --location $(location) --name $(resourceGroup)
      
                # Criar o Plano de Serviço com SO igual a Linux
                az appservice plan create -g $(resourceGroup) -n $(service-plan) --is-linux
      
                # Criar um Serviço de Aplicativo com JAVA 17 SE como runtime
                az webapp create -g $(resourceGroup) -p $(service-plan) -n $(app-name) --runtime "$(runtime)"
              visibleAzLogin: false
  - stage: BuildApp
    variables:
      gradleWrapperFile: 'gradlew'
    jobs:
      - job: buildWebApp
        displayName: 'Realizar o build do App'
        steps:
          - task: Gradle@3
            displayName: 'Build Orbis'
            inputs:
              gradleWrapperFile: '$(gradleWrapperFile)'
              tasks: 'build'
              testRunTitle: 'Testes Unitários'
              jdkVersionOption: 1.17

          - script: ls -lR $(System.DefaultWorkingDirectory)
            displayName: 'Listar conteúdo da pasta base (System.DefaultWorkingDirectory)'

          - task: CopyFiles@2
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/build/libs'
              Contents: 'orbis-0.0.1.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publicar artefato do Build Orbis'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: $(nome_artefato)

  - stage: deployApp
    jobs:
      - job: deployApp
        displayName: 'Deploy no Serviço de Aplicativo'
        steps:
        
        - task: DownloadBuildArtifacts@1
          displayName: 'Baixar artefato gerado'
          inputs:
            buildType: 'current'
            downloadType: 'specific'
            downloadPath: '$(System.DefaultWorkingDirectory)'

        - task: AzureRmWebAppDeployment@4
          displayName: 'Deploy Orbis'
          inputs:
            azureSubscription: 'MyAzureSubscription'
            appType: 'webApp'
            WebAppName: $(app-name)
            packageForLinux: '$(System.DefaultWorkingDirectory)/$(nome-artefato)/orbis-0.0.1.jar'
